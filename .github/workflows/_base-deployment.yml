name: _Base Deploy 
on:
  workflow_call:
    inputs:
      Environment:
        required: true
        type: string
      Title:
        required: true
        type: string
      AppName:
        required: true
        type: string
      AppURL:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
        
jobs:
  Deploy:
    name: Deploy To ${{inputs.Environment}}
    runs-on: ubuntu-latest
    environment:
        name: ${{inputs.Environment}}
        url:  ${{inputs.AppURL}}
        
    steps:
    - name: Update environmetn if Adhoc
      run: | 
        echo "This is adhoc environment"
        echo "Branch name is ${GITHUB_REF#refs/heads/}"
        PROJECTCODE=$(echo ${GITHUB_REF#refs/heads/} | cut -d'-' -f 1)
        echo "Project code  is $PROJECTCODE"
        if [ ${{inputs.Environment}} = Adhoc ]; then echo "environment_name=$PROJECTCODE" >> $GITHUB_ENV; else echo "environment_name=${{inputs.Environment}}" >> $GITHUB_ENV; fi
        echo "Environ now is ${{env.environment_name}}"
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: buildartifacts
        path: buildartifacts

    - name: Unzipping Build artifact
      run: |
        unzip -qq ./buildartifacts/Application.zip -d .
    
    - name: Login to Azure
      uses: Azure/login@v1.4.3
      continue-on-error: false
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
      
    - name: Azure key vault - Get Secrets
      uses: Azure/get-keyvault-secrets@v1
      id: GetAzureSecrets
      with:
        # Name of the azure key vault
        keyvault: kv-cicd-demo-${{env.environment_name}}
        # Name of the secret to be fetched
        secrets: topsecret
    
    - name: Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        # comma separated list of XML/JSON/YAML files in which tokens are to be substituted. Files names must be specified relative to the folder-path.
        files: '**/appsettings.json'
      env:
        SampleConfig.Title: ${{inputs.Title}}
        SampleConfig.SuperSecret: ${{steps.GetAzureSecrets.outputs.topsecret}}
  
    - name: 'Deploy web app'
      uses: azure/webapps-deploy@v2.2.3
      with:
        app-name: ${{ inputs.AppName }}
        package: './Application/build'
        
    - name: 'Update Settings in app service'
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ inputs.AppName }}
        app-settings-json: '${{ env.APP_SETTINGS }}' 
        connection-strings-json: '${{ env.CONNECTION_STRINGS }}'
        general-settings-json: '{"alwaysOn": "false", "webSocketsEnabled": "true"}' #'General configuration settings as Key Value pairs'
      id: settings
